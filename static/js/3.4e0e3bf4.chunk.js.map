{"version":3,"sources":["components/Dialogs/Dialogs_items/dialogsItems.module.css","components/Dialogs/Messages_items/messagesItems.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Dialogs_info/dialogsInfo.module.css","components/Dialogs/Dialogs_info/dialogsInfo.jsx","components/Dialogs/Dialogs_items/dialogItem/dialogItem.tsx","components/Dialogs/Dialogs_items/dialogsItems.tsx","components/Dialogs/Dialogs_items/DialogsItemsContainer.tsx","components/hoc/withAuthRedirect.tsx","components/Dialogs/Messages_items/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Messages_items/messagesItems.tsx","components/Dialogs/Messages_items/MessagesItemsContainer.tsx","components/Dialogs/Dialogs.tsx"],"names":["module","exports","DialogsInfo","profile","className","s","dialogs","dialog_profile","dialog_profile1","MyPhotoNavlink","dialog_profile_text","fullName","lookingForAJobDescription","type","dialog_search","dialog_search1","placeholder","DialogItem","id","src","name","name2","time1","time2","active","key","to","dialog1","Team_ava","alt","Team_text","dialog_p","Team_time","cn","DialogsItems","DirectMessage","PrivateChannels","ArrPublicChannels","PublicChannels","map","d","ArrPrivateChannels","ArrDirectMessage","dialogs1","public","dialog_border","connect","state","dialogsPage","postPage","dialogsItems","mapStateToPropsForRedirect","isAuth","auth","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmitSuccess","result","dispatch","reset","props","onSubmit","handleSubmit","footerForm","footerText","createField","required","Input","footerSend","MessagesItems","messages","dialogsIcons","addSendActionCreator","dialog","m","messageRight","messageLeft","message","time","arrHeaderIcons","i","header2_icons","icons1","messageHeader","message_header1","header12","message_header2","messageContent","messageFooter","footerIcons","smile","values","newMessageBody","compose","WrappedComponent","restProps","actions","Dialogs","DialogsItemsContainer","MessagesItemsContainer"],"mappings":"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","file":"static/js/3.4e0e3bf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"dialogsItems_dialogs__39ufj\",\"dialog_profile\":\"dialogsItems_dialog_profile__mIeRU\",\"dialog_profile1\":\"dialogsItems_dialog_profile1__i8W88\",\"dialog_profile_text\":\"dialogsItems_dialog_profile_text__10Kgt\",\"dialog_search\":\"dialogsItems_dialog_search__1UHLU\",\"dialog_search1\":\"dialogsItems_dialog_search1__ajhxF\",\"dialogs1\":\"dialogsItems_dialogs1__3XcNO\",\"dialog1\":\"dialogsItems_dialog1__aPQTE\",\"public\":\"dialogsItems_public__3UcdB\",\"dialog_p\":\"dialogsItems_dialog_p__CLjHp\",\"Team_time\":\"dialogsItems_Team_time__3BX8j\",\"active\":\"dialogsItems_active__1Hpy0\",\"time2\":\"dialogsItems_time2__3jwf7\",\"dialog_border\":\"dialogsItems_dialog_border__xzA7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"messagesItems_messages__8KIhS\",\"messageHeader\":\"messagesItems_messageHeader__3meak\",\"message_header1\":\"messagesItems_message_header1__3BJyD\",\"message_header2\":\"messagesItems_message_header2__iTMQp\",\"header2_icons\":\"messagesItems_header2_icons__2jOtn\",\"messageContent\":\"messagesItems_messageContent__3Wxja\",\"messageRight\":\"messagesItems_messageRight__1d4M5\",\"messageLeft\":\"messagesItems_messageLeft__IDdjL\",\"messageFooter\":\"messagesItems_messageFooter__2Ksgq\",\"footerForm\":\"messagesItems_footerForm__19TeR\",\"footerIcons\":\"messagesItems_footerIcons__3JgL3\",\"footerText\":\"messagesItems_footerText__1Vzbv\",\"footerSend\":\"messagesItems_footerSend__JRsdX\",\"dataRight\":\"messagesItems_dataRight__DsRyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1mxCj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog_profile\":\"dialogsInfo_dialog_profile__3T_-x\",\"dialog_profile1\":\"dialogsInfo_dialog_profile1__1xiCH\",\"dialog_profile_text\":\"dialogsInfo_dialog_profile_text__2c5Ex\",\"dialog_search\":\"dialogsInfo_dialog_search__14RP0\",\"dialog_search1\":\"dialogsInfo_dialog_search1__okhsT\"};","import React from \"react\";\r\nimport s from \"./dialogsInfo.module.css\"\r\nimport MyPhotoNavlink from \"../../common/MyPhotoNavlink/MyPhotoNavlink\";\r\n\r\n\r\nconst DialogsInfo = ({profile}) => {\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialog_profile}>\r\n                <div className={s.dialog_profile1}>\r\n                    <MyPhotoNavlink profile={profile}/>\r\n                    <div className={s.dialog_profile_text}>\r\n                        <h5>{profile != null ? profile.fullName : \"Azamat\"} </h5>\r\n                        <p>{profile != null ? profile.lookingForAJobDescription : \"Frontend developer\"}</p>\r\n                    </div>\r\n                </div>\r\n                <button type=\"submit\" className={s.dialog_search}>\r\n                    <input type=\"text\" className={s.dialog_search1} placeholder=\"Search...\"/>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogsInfo;","import React, {FC} from \"react\";\r\nimport s from \"./../dialogsItems.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FriendsListType} from \"../../../../Redux/dialogs-reducer\";\r\nimport cn from \"classnames\";\r\n\r\n\r\n    const DialogItem:FC <FriendsListType> = ({id,src,name,\r\n                                           name2,time1,time2,active}) => {\r\n        return <NavLink key={id} to={\"/dialogs/\" + id} className={s.dialog1}>\r\n            <div className={s.Team_ava}>\r\n                <img src={src} alt=''/>\r\n            </div>\r\n            <div className={s.Team_text}>\r\n                <h6>{name}</h6>\r\n                <p className={s.dialog_p}>{name2}</p>\r\n            </div>\r\n            <div className={s.Team_time}>\r\n                <div className={cn({\r\n                    [s.active]: active\r\n                }, s.time1)}>{time1}</div>\r\n                <p className={s.time2}>{time2}</p>\r\n            </div>\r\n        </NavLink>\r\n    }\r\n\r\nexport default DialogItem;","import React, {FC} from \"react\";\r\nimport s from \"./dialogsItems.module.css\"\r\nimport DialogsInfo from \"../Dialogs_info/dialogsInfo\";\r\nimport DialogItem from \"./dialogItem/dialogItem\";\r\nimport {FriendsListType} from \"../../../Redux/dialogs-reducer\";\r\nimport {profileType} from \"../../../type/type\";\r\n\r\ntype PropsType = {\r\n    PublicChannels: Array<FriendsListType>\r\n    PrivateChannels: Array<FriendsListType>\r\n    DirectMessage: Array<FriendsListType>\r\n    profile: profileType | null\r\n}\r\nconst DialogsItems: FC<PropsType> = ({\r\n                                         profile, DirectMessage,\r\n                                         PrivateChannels, PublicChannels\r\n                                     }) => {\r\n\r\n    let ArrPublicChannels = PublicChannels.map(d => <DialogItem id={d.id}\r\n                                                                key={d.id}\r\n                                                                src={d.src}\r\n                                                                name={d.name}\r\n                                                                name2={d.name2}\r\n                                                                time1={d.time1}\r\n                                                                time2={d.time2}\r\n                                                                active={d.active}\r\n    />)\r\n    let ArrPrivateChannels = PrivateChannels.map(d => <DialogItem id={d.id}\r\n                                                                  key={d.id}\r\n                                                                  src={d.src}\r\n                                                                  name={d.name}\r\n                                                                  name2={d.name2}\r\n                                                                  time1={d.time1}\r\n                                                                  time2={d.time2}\r\n                                                                  active={d.active}\r\n\r\n    />)\r\n    let ArrDirectMessage = DirectMessage.map(d => <DialogItem id={d.id}\r\n                                                              key={d.id}\r\n                                                              src={d.src}\r\n                                                              name={d.name}\r\n                                                              name2={d.name2}\r\n                                                              time1={d.time1}\r\n                                                              time2={d.time2}\r\n                                                              active={d.active}\r\n    />)\r\n    return <div className={s.dialogs}>\r\n        <DialogsInfo profile={profile}/>\r\n        <div className={s.dialogs1}>\r\n            <div className={s.public}>\r\n                <div className={s.dialog_border}><h5>Public Channels</h5></div>\r\n                {ArrPublicChannels}\r\n                <div className={s.dialog_border}><h5>Private Channels</h5></div>\r\n                {ArrPrivateChannels}\r\n                <div className={s.dialog_border}><h5>Direct Message</h5></div>\r\n                {ArrDirectMessage}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default DialogsItems;","import React from \"react\";\r\nimport dialogsItems from \"./dialogsItems\";\r\nimport {connect} from \"react-redux\";\r\nimport {appStateType} from \"../../../Redux/redux-store\";\r\nimport {profileType} from \"../../../type/type\";\r\nimport {FriendsListType} from \"../../../Redux/dialogs-reducer\";\r\nimport {appendFile} from \"fs\";\r\n\r\n\r\ntype MapStatePropsType={\r\n    PublicChannels: Array <FriendsListType>\r\n    PrivateChannels: Array <FriendsListType>\r\n    DirectMessage: Array <FriendsListType>\r\n    profile: profileType|null\r\n}\r\nlet mapStateToProps = (state:appStateType) => {\r\n    return {\r\n        PublicChannels: state.dialogsPage.PublicChannels,\r\n        PrivateChannels: state.dialogsPage.PrivateChannels,\r\n        DirectMessage: state.dialogsPage.DirectMessage,\r\n        profile: state.postPage.profile,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect <MapStatePropsType,{},{},appStateType> (mapStateToProps,{})(dialogsItems);","import React, {FC} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {appStateType} from \"../../Redux/redux-store\";\r\n\r\nlet mapStateToPropsForRedirect = (state:appStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\ntype MapPropsType={\r\n    isAuth:boolean\r\n}\r\n\r\n\r\nexport function withAuthRedirect <WCP>(WrappedComponent:React.ComponentType <WCP>) {//первая обертка Component который вызывает\r\n\r\n    const RedirectComponent:FC<MapPropsType >=(props:MapPropsType)=> {\r\n        let {isAuth,...restProps}=props\r\n        if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n        return <WrappedComponent {...restProps as WCP}/>\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect<MapPropsType,{},{},appStateType>(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent;\r\n}// вторая обертка, что бы вызывающая сторона не прокидовалы необходимые данные для успешной работы - withAuthRedirect\r\n//если ты не авторизован перекидывает на страницу логин\r\n\r\n","import React, {FC} from 'react';\r\nimport {InjectedFormProps, reduxForm, reset} from \"redux-form\";\r\nimport s from \"./../messagesItems.module.css\"\r\nimport {createField, GetStringKeysType, Input} from \"../../../common/formsControls/formsControls\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validations/validator\";\r\n\r\n\r\nexport type addNewFormValuesType = { newMessageBody: string }\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\ntype PropsType = {}\r\nconst AddNewMessageForm: FC<InjectedFormProps<addNewFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.footerForm}>\r\n            <div className={s.footerText}>\r\n                {createField<addNewFormValuesKeysType>('Write something here...',\r\n                    'newMessageBody', [required, maxLength100], Input)}\r\n            </div>\r\n            <div className={s.footerSend}>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst afterSubmit = (result: any, dispatch: any) =>\r\n    dispatch(reset('dialogAddMessageForm'));\r\n\r\n\r\ntype addNewFormValuesKeysType = GetStringKeysType<addNewFormValuesType>\r\n\r\nconst AddMessageReduxForm = reduxForm<addNewFormValuesType,PropsType>({\r\n    form: 'dialogAddMessageForm', onSubmitSuccess: afterSubmit\r\n})(AddNewMessageForm);\r\nexport default AddMessageReduxForm\r\n\r\n\r\n\r\n\r\n","import React, {FC} from \"react\";\r\nimport s from \"./messagesItems.module.css\"\r\nimport AddMessageReduxForm, {addNewFormValuesType} from \"./AddMessageForm/AddMessageForm\";\r\nimport smile from \"./../../../axios/images/smiley.png\";\r\nimport {PropsTypes} from \"./MessagesItemsContainer\";\r\n\r\nconst MessagesItems: FC<PropsTypes> = ({\r\n                                          messages, dialogsIcons,\r\n                                          addSendActionCreator\r\n                                      }) => {\r\n\r\n    let dialogLeft = 'https://iqonic.design/themes/socialv/html/images/user/05.jpg';\r\n    let dialog = messages.map(m =>\r\n        <div key={m.id} className={m.src === dialogLeft ? s.messageRight : s.messageLeft}>\r\n            {m.message}\r\n            <div>{m.time}</div>\r\n        </div>)\r\n\r\n    let addNewDialogs = (values:addNewFormValuesType) => {\r\n        addSendActionCreator(values.newMessageBody);\r\n    }\r\n\r\n    const arrHeaderIcons = dialogsIcons.map(i => {\r\n        return <div className={s.header2_icons} key={i.id}>\r\n            <img className={s.icons1}\r\n                 src={i.src}/>\r\n        </div>\r\n    })\r\n\r\n    return (\r\n        <div className={s.messages}>\r\n            <div className={s.messageHeader}>\r\n                <div className={s.message_header1}>\r\n                    <div className={s.header12}><img\r\n                        src=\"https://iqonic.design/themes/socialv/html/images/user/05.jpg\"/></div>\r\n                    <div className={s.header12}><h5>Radik</h5> Team leader</div>\r\n                </div>\r\n                <div className={s.message_header2}>\r\n                    {arrHeaderIcons}\r\n                </div>\r\n            </div>\r\n            <div className={s.messageContent}>\r\n                {dialog}\r\n            </div>\r\n            <div className={s.messageFooter}>\r\n                <div className={s.footerIcons}>\r\n                    <div><img src={smile}/></div>\r\n                    <div><img src='https://img.icons8.com/ios/2x/attach.png'/></div>\r\n                </div>\r\n                <div><AddMessageReduxForm onSubmit={addNewDialogs}/></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessagesItems;\r\n","import React from \"react\";\r\nimport {\r\ndialogsIconType,\r\n    messagesType\r\n} from \"../../../Redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport MessagesItems from \"./messagesItems\";\r\nimport {appStateType} from \"../../../Redux/redux-store\";\r\nimport {actions} from \"../../../Redux/dialogs-reducer\";\r\n\r\ntype MapStatePropsType = {\r\n    messages: Array<messagesType>,\r\n    dialogsIcons: Array<dialogsIconType>\r\n}\r\ntype MapDispatchPropsType = {\r\n    addSendActionCreator:(newMessage:string)=>void\r\n}\r\n\r\n\r\nconst mapStateToProps = (state: appStateType): MapStatePropsType => {\r\n    return {\r\n        messages: state.dialogsPage.messages,\r\n        dialogsIcons: state.dialogsPage.dialogsIcons,\r\n    }\r\n}\r\nexport type PropsTypes=MapDispatchPropsType & MapStatePropsType\r\n\r\nexport default compose<React.ComponentType>( withAuthRedirect,\r\n    connect <MapStatePropsType,MapDispatchPropsType ,{},appStateType> (mapStateToProps,\r\n        {addSendActionCreator:actions.addSendActionCreator}))(MessagesItems);\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\";\r\nimport DialogsItemsContainer from \"./Dialogs_items/DialogsItemsContainer\";\r\nimport MessagesItemsContainer from \"./Messages_items/MessagesItemsContainer\";\r\n\r\n\r\nconst Dialogs = () => {\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <DialogsItemsContainer/>\r\n            <MessagesItemsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n"],"sourceRoot":""}